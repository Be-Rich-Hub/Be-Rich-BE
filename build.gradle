plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'org.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {

    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter-actuator:3.2.3'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.2.3'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client:3.2.3'
    implementation 'org.springframework.boot:spring-boot-starter-security:3.2.3'
    implementation 'org.springframework.boot:spring-boot-starter-validation:3.2.3'
    implementation 'org.springframework.boot:spring-boot-starter-web:3.2.3'
//    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // Database
    runtimeOnly 'com.mysql:mysql-connector-j' // MySQL

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // Spirngdoc OpenAPI (Swagger)
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'

    // Configuration Processor (for binding application.yml)
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    // Development Only
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}
